name: Release

on:
  push:
    tags:
      - 'v*'

env:
  DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer

jobs:
  create-release:
    name: Create Release
    runs-on: macos-14
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Select Xcode Version
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
    
    - name: Install Tuist
      run: |
        curl -Ls https://install.tuist.io | bash
        echo "$HOME/.tuist/bin" >> $GITHUB_PATH
    
    - name: Generate Xcode Project
      run: |
        cd HealthGeneratorApp
        tuist generate --no-open
    
    - name: Build and Archive iOS App
      run: |
        cd HealthGeneratorApp
        xcodebuild -workspace HealthGeneratorApp.xcworkspace \
          -scheme HealthGeneratorApp \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath build/HealthGeneratorApp.xcarchive \
          archive \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Build Swift Package
      run: |
        cd HealthKitDataGenerator
        swift build -c release
    
    - name: Generate Changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for current version
          VERSION=${GITHUB_REF#refs/tags/}
          awk "/^## \[?${VERSION#v}/ { flag=1; next } /^## / { flag=0 } flag" CHANGELOG.md > current_changelog.txt
          if [ ! -s current_changelog.txt ]; then
            echo "No changelog found for version ${VERSION#v}, generating from commits..."
            git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD > current_changelog.txt
          fi
        else
          echo "Generating changelog from recent commits..."
          git log --pretty=format:"- %s" --since="1 week ago" > current_changelog.txt
        fi
        
        # Set output for GitHub release
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        cat current_changelog.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's Changed
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          ### Swift Package Manager
          Add the following to your `Package.swift`:
          
          ```swift
          dependencies: [
              .package(url: "https://github.com/${{ github.repository }}", from: "${{ github.ref_name }}")
          ]
          ```
          
          ### iOS App
          Download the source code and follow the setup instructions in the README.
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}

  publish-swift-package:
    name: Validate Swift Package
    runs-on: macos-14
    needs: create-release
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode Version
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
    
    - name: Validate Swift Package
      run: |
        cd HealthKitDataGenerator
        swift package resolve
        swift build -c release
        swift test -c release
